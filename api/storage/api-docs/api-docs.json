{
    "openapi": "3.0.0",
    "info": {
        "title": "Symbiota API",
        "contact": {
            "name": "Symbiota Support Hub Team",
            "email": "symbiota@asu.edu"
        },
        "version": "2.0"
    },
    "servers": [
        {
            "url": "../"
        }
    ],
    "paths": {
        "/api/v2/collection": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/collection",
                "parameters": [
                    {
                        "name": "managementType",
                        "in": "query",
                        "description": "live, snapshot, aggregate",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "collectionType",
                        "in": "query",
                        "description": "preservedSpecimens, observations, researchObservation",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Controls the number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1000
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of collections",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        },
        "/api/v2/collection/{identifier}": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/collection/identifier",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "Installation ID or GUID associated with target collection",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns collection data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Collection identifier is required."
                    }
                }
            }
        },
        "/api/v2/installation": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/installation",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Pagination parameter: maximum number of records per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Pagination parameter: page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of installations registered within system",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        },
        "/api/v2/installation/{identifier}": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/installation/identifier",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "Installation ID or GUID associated with target installation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns metabase on installation registered within system with matching ID",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Installation identifier is required."
                    }
                }
            }
        },
        "/api/v2/installation/ping": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/installation/ping",
                "responses": {
                    "200": {
                        "description": "Returns installation metadata",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        },
        "/api/v2/installation/{identifier}/touch": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/installation/identifier/touch",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "Identifier of the remote installation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endpoint",
                        "in": "query",
                        "description": "Url to Symbiota root of remote installation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns metabase remote installation, if successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Identifier of remote installation is required."
                    }
                }
            }
        },
        "/api/v2/installation/{identifier}/occurrence": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/installation/identifier/occurrence",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "Identifier of the remote installation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Pagination parameter: maximum number of records per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Pagination parameter: page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of occurrences associated with an installations",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Identifier of remote installation is required."
                    }
                }
            }
        },
        "/api/v2/inventory": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/inventory",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Controls the number of results in the page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of inventories registered within system",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        },
        "/api/v2/inventory/{identifier}": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/inventory/identifier",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "PK, GUID, or recordID associated with target inventory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns metabase on inventory registered within system with matching ID",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Inventory identifier is required."
                    }
                }
            }
        },
        "/api/v2/inventory/{identifier}/taxa": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/inventory/identifier/taxa",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Controls the number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of inventories registered within system",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        },
        "/api/v2/media": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "showAllMedia",
                "responses": {
                    "200": {
                        "description": "Returns list of media records",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            },
            "post": {
                "tags": [
                    ""
                ],
                "summary": "Creates a new Media record",
                "operationId": "insertMedia",
                "parameters": [
                    {
                        "name": "apiToken",
                        "in": "query",
                        "description": "API security token to authenticate post action",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Media object to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "originalUrl"
                                ],
                                "properties": {
                                    "format": {
                                        "description": "Media Type (MIME type)",
                                        "type": "string",
                                        "maxLength": 45,
                                        "enum": [
                                            "image/jpeg",
                                            "image/png",
                                            "image/tiff",
                                            "audio/wav"
                                        ]
                                    },
                                    "originalUrl": {
                                        "description": "URL of original media file; images should be a web-ready JPG",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "mediumUrl": {
                                        "description": "URL of medium sized image of original image",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "thumbnailUrl": {
                                        "description": "URL of thumbnail representation original media file",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "archiveUrl": {
                                        "description": "URL of archival media file (e.g. DNG, TIFF, etc), if publicly web accessible",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "referenceUrl": {
                                        "description": "URL of a web representation of media file. Maybe consist of html wrapper, viewer, player, etc",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "occid": {
                                        "description": "Primary Key of occurrence record that media object is associated with. Should be left null if record is not associated with an occurrence.",
                                        "type": "integer"
                                    },
                                    "tid": {
                                        "description": "Primary Key of taxon record (e.g. scientific name reference) associated with media object. Should be left NULL if record is associated with an occurrence, since media will inherit occurrence identification. Required if media is not associated with an occurrence record (e.g. field image)",
                                        "type": "integer"
                                    },
                                    "photographer": {
                                        "description": "Verbatim name of author/photographer media object. Leave NULL if photographerUid is supplied",
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "photographerUid": {
                                        "description": "User Primary Key of photographer, who must have a user account register in the portal",
                                        "type": "integer"
                                    },
                                    "imageType": {
                                        "description": "Term name of image type (e.g. stillImage)",
                                        "type": "string",
                                        "maxLength": 45
                                    },
                                    "caption": {
                                        "description": "Consist, free-form text describing content of media object",
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "copyright": {
                                        "description": "Copyright Owner",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "rights": {
                                        "description": "A URI pointing to structured information about rights held in and over the resource (e.g. https://creativecommons.org/publicdomain/zero/1.0/, https://creativecommons.org/licenses/by/4.0/legalcode)",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "accessRights": {
                                        "description": "Information about who can access the resource or an indication of its security status",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "locality": {
                                        "description": "Short description of locality. Leave null if locality is available via the occurrence record",
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "notes": {
                                        "description": "General notes",
                                        "type": "string",
                                        "maxLength": 350
                                    },
                                    "sourceIdentifier": {
                                        "description": "The source identifier, if media was harvested from an external resource",
                                        "type": "string",
                                        "maxLength": 150
                                    },
                                    "hashFunction": {
                                        "description": "Cryptographic hash function used to compute the value given in the Hash Value",
                                        "type": "string",
                                        "maxLength": 45
                                    },
                                    "hashValue": {
                                        "description": "Value computed by a hash function applied to the media that will be delivered at the access point",
                                        "type": "string",
                                        "maxLength": 45
                                    },
                                    "sortSequence": {
                                        "description": "Media sort control within the taxon profile page",
                                        "type": "integer"
                                    },
                                    "sortOccurrence": {
                                        "description": "Media sort control within the occurrence profile page",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns JSON object of the of media record that was created"
                    },
                    "400": {
                        "description": "Error: Bad request."
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v2/media/{identifier}": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "showOneMedia",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "primary key or record GUID (UUID) associated with target media object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns single media record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "application/json"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Media identifier is required."
                    }
                }
            },
            "delete": {
                "tags": [
                    ""
                ],
                "operationId": "deleteMedia",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "primary key or record GUID (UUID) associated with target media object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "apiToken",
                        "in": "query",
                        "description": "API security token to authenticate post action",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Record deleted successfully"
                    },
                    "400": {
                        "description": "Error: Bad request. Media identifier is required."
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    ""
                ],
                "operationId": "updateMedia",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "primary key or record GUID (UUID) associated with target media object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "apiToken",
                        "in": "query",
                        "description": "API security token to authenticate post action",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Media object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "format": {
                                        "description": "Media Type (MIME type)",
                                        "type": "string",
                                        "maxLength": 45,
                                        "enum": [
                                            "image/jpeg",
                                            "image/png",
                                            "image/tiff",
                                            "audio/wav"
                                        ]
                                    },
                                    "originalUrl": {
                                        "description": "URL of original media file; images should be a web-ready JPG",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "mediumUrl": {
                                        "description": "URL of medium sized image of original image",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "thumbnailUrl": {
                                        "description": "URL of thumbnail representation original media file",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "archiveUrl": {
                                        "description": "URL of archival media file (e.g. DNG, TIFF, etc), if publicly web accessible",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "referenceUrl": {
                                        "description": "URL of a web representation of media file. Maybe consist of html wrapper, viewer, player, etc",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "occid": {
                                        "description": "Primary Key of occurrence record that media object is associated with. Should be left null if record is not associated with an occurrence.",
                                        "type": "integer"
                                    },
                                    "tid": {
                                        "description": "Primary Key of taxon record (e.g. scientific name reference) associated with media object. Should be left NULL if record is associated with an occurrence, since media will inherit occurrence identification. Required if media is not associated with an occurrence record (e.g. field image)",
                                        "type": "integer"
                                    },
                                    "photographer": {
                                        "description": "Verbatim name of author/photographer media object. Leave NULL if photographerUid is supplied",
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "photographerUid": {
                                        "description": "User Primary Key of photographer, who must have a user account register in the portal",
                                        "type": "integer"
                                    },
                                    "imageType": {
                                        "description": "Term name of image type (e.g. stillImage)",
                                        "type": "string",
                                        "maxLength": 45
                                    },
                                    "caption": {
                                        "description": "Consist, free-form text describing content of media object",
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "copyright": {
                                        "description": "Copyright Owner",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "rights": {
                                        "description": "A URI pointing to structured information about rights held in and over the resource (e.g. https://creativecommons.org/publicdomain/zero/1.0/, https://creativecommons.org/licenses/by/4.0/legalcode)",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "accessRights": {
                                        "description": "Information about who can access the resource or an indication of its security status",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "locality": {
                                        "description": "Short description of locality. Leave null if locality is available via the occurrence record",
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "notes": {
                                        "description": "General notes",
                                        "type": "string",
                                        "maxLength": 350
                                    },
                                    "sourceIdentifier": {
                                        "description": "The source identifier, if media was harvested from an external resource",
                                        "type": "string",
                                        "maxLength": 150
                                    },
                                    "hashFunction": {
                                        "description": "Cryptographic hash function used to compute the value given in the Hash Value",
                                        "type": "string",
                                        "maxLength": 45
                                    },
                                    "hashValue": {
                                        "description": "Value computed by a hash function applied to the media that will be delivered at the access point",
                                        "type": "string",
                                        "maxLength": 45
                                    },
                                    "sortSequence": {
                                        "description": "Media sort control within the taxon profile page",
                                        "type": "integer"
                                    },
                                    "sortOccurrence": {
                                        "description": "Media sort control within the occurrence profile page",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns full JSON object of the of media record that was edited"
                    },
                    "400": {
                        "description": "Error: Bad request."
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v2/occurrence/annotation/search": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/occurrence/annotation/search",
                "parameters": [
                    {
                        "name": "collid",
                        "in": "query",
                        "description": "Internal identifier (PK) for collection",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Annoration type (internal, external) ",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "internal",
                            "enum": [
                                "internal",
                                "external"
                            ]
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "External source of Annoration (e.g. geolocate) ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldName",
                        "in": "query",
                        "description": "Name of occurrence field that was annotated (e.g. recordedBy, eventDate) ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "The start date of a date range the annotation was created (e.g. 2022-02-05) ",
                        "required": false,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "The end date of a date range the annotation was created (e.g. 2022-02-05) ",
                        "required": false,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Controls the number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 500
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of occurrence edits",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        },
        "/api/v2/occurrence/search": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/occurrence/search",
                "parameters": [
                    {
                        "name": "collid",
                        "in": "query",
                        "description": "collid(s) - collection identifier(s) in portal",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "catalogNumber",
                        "in": "query",
                        "description": "catalogNumber",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "occurrenceID",
                        "in": "query",
                        "description": "occurrenceID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "family",
                        "in": "query",
                        "description": "family",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sciname",
                        "in": "query",
                        "description": "Scientific Name - binomen only without authorship",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recordedBy",
                        "in": "query",
                        "description": "Collector/observer of occurrence",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recordedByLastName",
                        "in": "query",
                        "description": "Last name of collector/observer of occurrence",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recordNumber",
                        "in": "query",
                        "description": "Personal number of the collector or observer of the occurrence",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "eventDate",
                        "in": "query",
                        "description": "Date as YYYY, YYYY-MM or YYYY-MM-DD",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "country",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stateProvince",
                        "in": "query",
                        "description": "State, Province, or second level political unit",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "county",
                        "in": "query",
                        "description": "County, parish, or third level political unit",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "datasetID",
                        "in": "query",
                        "description": "dataset ID within portal",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Controls the number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of occurrences",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        },
        "/api/v2/occurrence/{identifier}": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/occurrence/identifier",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "occid or specimen GUID (occurrenceID) associated with target occurrence",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeMedia",
                        "in": "query",
                        "description": "Whether to include media within output",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "includeIdentifications",
                        "in": "query",
                        "description": "Whether to include full Identification History within output",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns single occurrence record",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Occurrence identifier is required."
                    }
                }
            }
        },
        "/api/v2/occurrence/{identifier}/identification": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/occurrence/identifier/identification",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "occid or specimen GUID (occurrenceID) associated with target occurrence",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns identification records associated with a given occurrence record",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Occurrence identifier is required."
                    }
                }
            }
        },
        "/api/v2/occurrence/{identifier}/media": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/occurrence/identifier/media",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "occid or specimen GUID (occurrenceID) associated with target occurrence",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns media records associated with a given occurrence record",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Occurrence identifier is required."
                    }
                }
            }
        },
        "/api/v2/occurrence/skeletal": {
            "post": {
                "tags": [
                    ""
                ],
                "description": "If an existing record can be located within target collection based on matching the input identifier, empty (null) target fields will be updated with Skeletal Data.\r\n\t\t\tIf the target field contains data, it will remain unaltered.\r\n\t\t\tIf multiple records are returned matching the input identifier, data will be added only to the first record.\r\n\t\t\tIf an identifier is not provided or a matching record can not be found, a new Skeletal record will be created and primed with input data.\r\n\t\t\tNote that catalogNumber or otherCatalogNumber must be provided to create a new skeletal record. If processingStatus is not defined, new skeletal records will be set as 'unprocessed'",
                "operationId": "skeletalImport",
                "parameters": [
                    {
                        "name": "apiToken",
                        "in": "query",
                        "description": "API security token to authenticate post action",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "collid",
                        "in": "query",
                        "description": "primary key of target collection dataset",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "catalog number, other identifiers, occurrenceID, or recordID GUID (UUID) used to locate target occurrence occurrence",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifierTarget",
                        "in": "query",
                        "description": "Target field for matching identifier: catalog number, other identifiers (aka otherCatalogNumbers), GUID (occurrenceID or recordID), occid (primary key for occurrence). If identifier field is null, a new skeletal record will be created, given that a catalog number is provided.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "CATALOGNUMBER",
                            "enum": [
                                "CATALOGNUMBER",
                                "IDENTIFIERS",
                                "GUID",
                                "OCCID",
                                "NONE"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "description": "Occurrence data to be inserted",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "catalogNumber": {
                                        "description": "Primary catalog number",
                                        "type": "string",
                                        "maxLength": 32
                                    },
                                    "otherCatalogNumbers": {
                                        "description": "Additional catalog numbers",
                                        "type": "string",
                                        "maxLength": 75
                                    },
                                    "sciname": {
                                        "description": "Scientific name, without the author",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "scientificNameAuthorship": {
                                        "description": "The authorship information of scientific name",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "family": {
                                        "description": "Taxonomic family of the scientific name",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "recordedBy": {
                                        "description": "Primary collector or observer",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "recordNumber": {
                                        "description": "Identifier given at the time occurrence was recorded; typically the personal identifier of the primary collector or observer",
                                        "type": "string",
                                        "maxLength": 45
                                    },
                                    "eventDate": {
                                        "description": "Date the occurrence was collected or observed, or earliest date if a range was provided",
                                        "type": "string"
                                    },
                                    "eventDate2": {
                                        "description": "Last date the occurrence was collected or observed. Used when a date range is provided",
                                        "type": "string"
                                    },
                                    "country": {
                                        "description": "The name of the country or major administrative unit",
                                        "type": "string",
                                        "maxLength": 64
                                    },
                                    "stateProvince": {
                                        "description": "The name of the next smaller administrative region than country (state, province, canton, department, region, etc.)",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "county": {
                                        "description": "The full, unabbreviated name of the next smaller administrative region than stateProvince (county, shire, department, etc.",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "processingStatus": {
                                        "description": "Processing status of the specimen record",
                                        "type": "string",
                                        "maxLength": 45
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns full JSON object of the of media record that was edited"
                    },
                    "400": {
                        "description": "Error: Bad request."
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v2/taxonomy": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/taxonomy",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Controls the number of results in the page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of inventories registered within system",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        },
        "/api/v2/taxonomy/search": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/taxonomy/search",
                "parameters": [
                    {
                        "name": "taxon",
                        "in": "query",
                        "description": "Taxon searh term",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of search",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "EXACT",
                            "enum": [
                                "EXACT",
                                "START",
                                "WHOLEWORD",
                                "WILD"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Controls the number of results in the page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of inventories registered within system",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        },
        "/api/v2/taxonomy/{identifier}": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/taxonomy/identifier",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "Identifier (PK = tid) associated with taxonomic target",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns metabase on inventory registered within system with matching ID",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Inventory identifier is required."
                    }
                }
            }
        },
        "/api/v2/taxonomy/{identifier}/description": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/taxonomy/identifier/description",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "PK, GUID, or recordID associated with target taxonomic unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Controls the number of results in the page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of taxonomic descriptions for a given taxon",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        }
    },
    "components": {
        "responses": {
            "200": {
                "description": "Triggers a reharvest event of a snapshot record. If record is Live managed, request is ignored",
                "content": {
                    "application/json": {
                        "schema": {}
                    }
                }
            },
            "400": {
                "description": "Error: Bad request: Occurrence identifier is required, API can only be triggered locally (at this time)."
            },
            "500": {
                "description": "Error: unable to locate record"
            }
        },
        "parameters": {
            "identifier": {
                "name": "identifier",
                "in": "path",
                "description": "occid or specimen GUID (occurrenceID) associated with target occurrence",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        }
    }
}